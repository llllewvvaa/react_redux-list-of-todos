{"version":3,"sources":["features/filter.ts","features/currentTodo.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["statusType","actions","todo","type","payload","currentTodoReducer","state","action","query","status","defaultFilter","ALL","filterReducer","filter","todosReducer","todos","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","currentTodoDispatch","useState","visibleTodos","setVisibleTodos","useEffect","title","includes","ACTIVE","completed","COMPLETED","className","length","map","id","onClick","onClickEye","TodoFilter","filterDispatch","onSubmit","event","preventDefault","value","onChange","target","console","log","placeholder","e","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","currentUser","setCurrentUser","userId","href","email","name","App","todoDispatch","todosFromServer","forEach","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebafa7d6.chunk.js","sourcesContent":["/* eslint-disable */\nexport enum statusType {\n  ALL = 'ALL',\n  ACTIVE = 'ACTIVE',\n  COMPLETED = 'COMPLETED',\n}\n\ntype SetQuery = { type: 'filter/SET_QUERY', payload: string };\ntype SetStatus = { type: 'filter/SET_STATUS', payload: statusType };\ntype ClearQuery = { type: 'filter/CLEAR_QUERY' };\n\ntype Action = SetQuery | SetStatus | ClearQuery;\n\nconst setQuery = (query: string): SetQuery => ({ type: 'filter/SET_QUERY', payload: query })\nconst setStatus = (status: statusType): SetStatus => ({ type: 'filter/SET_STATUS', payload: status })\nconst clearQuery = (): ClearQuery => ({ type: 'filter/CLEAR_QUERY' })\n\nexport const actions = { setQuery, setStatus, clearQuery };\n\nconst defaultFilter = { query: '', status: statusType.ALL };\n\nconst filterReducer = (filter = defaultFilter, action: Action) => {\n  switch (action.type) {\n    case \"filter/SET_QUERY\":\n      return {\n        ...filter,\n        query: action.payload,\n      }\n    case \"filter/SET_STATUS\":\n      return {\n        ...filter,\n        status: action.payload,\n      }\n    case \"filter/CLEAR_QUERY\":\n      return {\n        ...filter,\n        query: '',\n      }\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddAction = { type: 'todo/ADD', payload: Todo };\ntype TakeAction = { type: 'todo/TAKE', payload: Todo };\ntype ClearAction = { type: 'todo/CLEAR' };\n\ntype Action = AddAction | TakeAction | ClearAction;\n\nconst add = (todo: Todo): AddAction => ({ type: 'todo/ADD', payload: todo });\nconst take = (todo: Todo): TakeAction => ({ type: 'todo/TAKE', payload: todo });\nconst clear = (): ClearAction => ({ type: 'todo/CLEAR' });\n\nexport const actions = { add, take, clear };\n\nconst todosReducer = (todos: Todo[] = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todo/ADD':\n      return [\n        ...todos,\n        action.payload,\n      ];\n\n    case 'todo/TAKE':\n      return todos.filter(todo => todo !== action.payload);\n\n    case 'todo/CLEAR':\n      return [];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch, RootState } from './store';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { actions } from '../../features/currentTodo';\nimport { useAppSelector } from '../../app/hooks';\nimport { statusType } from '../../features/filter';\n\nexport const TodoList: React.FC = () => {\n  const currentTodoDispatch = useDispatch();\n  const filter = useAppSelector(state => state.filter);\n  const todos = useAppSelector(state => state.todos);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n\n  const onClickEye = (todo: Todo) => {\n    currentTodoDispatch(actions.setTodo(todo));\n  };\n\n  useEffect(() => {\n    switch (filter.status) {\n      case statusType.ALL:\n        setVisibleTodos(todos.filter((todo) => (\n          todo.title.includes(filter.query)\n        )));\n        break;\n      case statusType.ACTIVE:\n        setVisibleTodos(todos.filter((todo) => (\n          todo.title.includes(filter.query)\n          && !todo.completed\n        )));\n        break;\n      case statusType.COMPLETED:\n        setVisibleTodos(todos.filter((todo) => (\n          todo.title.includes(filter.query)\n          && todo.completed\n        )));\n        break;\n      default:\n        setVisibleTodos(todos);\n    }\n  }, [filter, todos]);\n\n  return (\n    <>\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            visibleTodos.length === 0 ? (\n              <p className=\"notification is-warning\">\n                There are no todos matching current filter criteria\n              </p>\n            ) : (\n              <>\n                {\n                  visibleTodos.map((todo) => (\n                    <tr data-cy=\"todo\">\n                      <td className=\"is-vcentered\">\n                        {todo.id}\n                      </td>\n                      <td className=\"is-vcentered\">\n                        {todo.completed}\n                      </td>\n\n                      <td className=\"is-vcentered is-expanded\">\n                        <p className=\"has-text-danger\">\n                          {todo.title}\n                        </p>\n                      </td>\n\n                      <td className=\"has-text-right is-vcentered\">\n                        <button\n                          data-cy=\"selectButton\"\n                          className=\"button\"\n                          type=\"button\"\n                          onClick={() => onClickEye(todo)}\n                        >\n                          <span className=\"icon\">\n                            <i className=\"far fa-eye\" />\n                          </span>\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </>\n            )\n          }\n        </tbody>\n      </table>\n    </>\n  );\n};\n","/* eslint-disable */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport {actions, statusType} from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const filterDispatch = useDispatch();\n  const filter = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={event => {\n              filterDispatch(actions.setStatus(event.target.value as statusType))\n              console.log(event.target.value);\n            }}\n          >\n            <option value={statusType.ALL}>\n              All\n            </option>\n            <option value={statusType.ACTIVE}>\n              Active\n            </option>\n            <option value={statusType.COMPLETED}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={e => filterDispatch(actions.setQuery(e.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => filterDispatch(actions.clearQuery())}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport const Loader: React.FC = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import { Todo } from './types/Todo';\r\nimport { User } from './types/User';\r\n\r\n// eslint-disable-next-line max-len\r\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\r\n\r\nfunction wait(delay: number): Promise<void> {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction get<T>(url: string): Promise<T> {\r\n  // eslint-disable-next-line prefer-template\r\n  const fullURL = BASE_URL + url + '.json';\r\n\r\n  return wait(300)\r\n    .then(() => fetch(fullURL))\r\n    .then(res => res.json());\r\n}\r\n\r\nexport const getTodos = () => get<Todo[]>('/todos');\r\n\r\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\r\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const currentTodoDispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const removeCurrentTodo = () => (currentTodoDispatch(actions.removeTodo()));\n\n  useEffect(() => {\n    if (currentTodo !== null) {\n      getUser(currentTodo.userId)\n        .then(setCurrentUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {\n        currentTodo && currentUser ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {currentTodo.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  removeCurrentTodo();\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {\n                  currentTodo.completed ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )\n                }\n                {' by '}\n                <a href={`mailto:${currentUser?.email}`}>\n                  {currentUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        ) : (\n          <Loader />\n        )\n      }\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const todoDispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const addTodos = (newTodo: Todo) => (todoDispatch(todosActions.add(newTodo)));\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => todosFromServer\n        .forEach(todo => addTodos(todo)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length > 0 ? (\n                  <TodoList />\n                ) : (\n                  <Loader />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        currentTodo && (\n          <TodoModal />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport { store } from './app/store';\r\nimport { App } from './App';\r\n\r\n// Just a convenient component with all the wrappers for the `App`\r\n// The Router component (if you use it) should be placed inside the Provider\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}